= Schema Sleuth

A ruby script (for *nix) to search a database for related records based given a column name and value and recursively follows and outputs related rows. Attempts to avoid excessive recursion via related record row limit default of 1000 (otherwise can be slow and may run out of memory), a default max related table depth level of 5, etc.

== Installation

Install Git and Ruby.

Install RBI and Trollop:

      gem install dbi
      gem install trollop

Clone this project.

      cd ~
      git clone http://github.com/garysweaver/schema-sleuth.git

Then add the following to your .bash_profile, or whatever you want:

      #schema-sleuth
      export PATH=$PATH:~/schema-sleuth

Restart Terminal.app or whatever, and then test by doing:

      ssleuth -h
	
== Usage

      ssleuth [options]
      
Required:

* <tt>--driver-url</tt>, <tt>-r</tt>: DBI driver URL. Be sure to add .WORLD after the SID for Oracle. e.g. DBI:OCI8://db.acme.org:1234/ACMETEST.WORLD
* <tt>--user</tt>, <tt>-u</tt>: database username. e.g. jdoe
* <tt>--password</tt>, <tt>-p</tt>: database password. e.g. secret
* <tt>--column-name</tt>, <tt>-c</tt>: column name. e.g. user_id
* <tt>--value</tt>, <tt>-e</tt>: column value. e.g. 1234

Required if not Oracle:

* <tt>--table-names-query</tt>, <tt>-t</tt>: SQL query to use to get full listing of tables. e.g. "select column_name FROM all_tab_cols where table_name = '$TABLE_NAME'"
* <tt>--column-names-query</tt>, <tt>-n</tt>: SQL query to use to get column names for a table. Substitute $TABLE_NAME for the table name. e.g. "select column_name FROM all_tab_cols where table_name = '$TABLE_NAME'"

Optional:

* <tt>--generate-inserts</tt>, <tt>-i</tt>: output as insert statements
* <tt>--maximum-depth</tt>, <tt>-s</tt>: maximum depth (default: 5)
* <tt>--maximum-row-count</tt>, <tt>-m</tt>: maximum row count. Does not attempt to follow path if more than this many rows are found from a query. However, you can still get more than one row in result summaries, via multiple queries. (Default: 1000)
* <tt>--debug</tt>, <tt>-d</tt>: outputs debugging information
* <tt>--version</tt>, <tt>-v</tt>: Print version and exit
* <tt>--help</tt>, <tt>-h</tt>: Show this message

== Examples

MySQL:

      ssleuth -r DBI:Mysql:TESTDB:localhost -u jdoe -p secret -c user_id -e 1234

Oracle:

      ssleuth -r DBI:OCI8://db.acme.org:1234/ACMETEST.WORLD -u jdoe -p secret -c user_id -e 1234

Custom:

      ssleuth -r DBI:OCI8://db.acme.org:1234/ACMETEST.WORLD -u jdoe -p secret -c user_id -e 1234 -t "select TABLE_NAME from ALL_ALL_TABLES" -n "select column_name FROM all_tab_cols where table_name = '$TABLE_NAME'"

== Sample Output

Example of normal output:

      .......

      SAMPLE_TABLE_A
      
      USER_ID, USER_NAME
      ------------
      '123', 'Joe'
      
      
      SAMPLE_TABLE_B
      
      USER_ID, VEHICLE_ID
      ------------
      '123', '234'
      '123', '235'
      
      
      SAMPLE_TABLE_C
      
      VEHICLE_ID, VEHICLE_MAKE, VEHICLE_MODEL, COLOR_ID
      ------------
      '234', 'Kia', 'Sorento', '345'
      '235', 'Kia', 'Sportage', '346'
      
      
      SAMPLE_TABLE_D
      
      COLOR_ID, COLOR_NAME
      ------------
      '345', 'Red'
      '346', 'Green'

Example of output with -i:

      .......
      
      INSERT INTO SAMPLE_TABLE_A (USER_ID, USER_NAME) VALUES ('123', 'Joe');
      INSERT INTO SAMPLE_TABLE_B (USER_ID, VEHICLE_ID) VALUES ('123', '234');
      INSERT INTO SAMPLE_TABLE_B (USER_ID, VEHICLE_ID) VALUES ('123', '235');
      INSERT INTO SAMPLE_TABLE_C (VEHICLE_ID, VEHICLE_MAKE, VEHICLE_MODEL, COLOR_ID) VALUES ('234', 'Kia', 'Sorento', '345');
      INSERT INTO SAMPLE_TABLE_C (VEHICLE_ID, VEHICLE_MAKE, VEHICLE_MODEL, COLOR_ID) VALUES ('235', 'Kia', 'Sportage', '346');
      INSERT INTO SAMPLE_TABLE_D (COLOR_ID, COLOR_NAME) VALUES ('345', 'Red');
      INSERT INTO SAMPLE_TABLE_D (COLOR_ID, COLOR_NAME) VALUES ('346', 'Green');

== Troubleshooting

Specify -d to debug. If debug is not specified, you can see still see progress via the dots, etc. printed. A '.' means that data was retrieved. A 'M' indicates that the maximum-row-count was exceeded. A 'O' indicates that the maximum-depth was exceeded. If it encounters an error, it will display it in full glory.

== License

Copyright (c) 2010-2011 Gary S. Weaver, released under the {MIT license}[http://github.com/garysweaver/schema-sleuth/blob/master/LICENSE].
